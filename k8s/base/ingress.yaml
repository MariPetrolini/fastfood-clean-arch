apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fastfood-api-ingress
  namespace: fastfood
  labels:
    app: fastfood-api
  annotations:
    # Nginx Ingress Controller
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Rate limiting para proteger contra DDoS
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # CORS headers
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    
    # Configurações de timeout
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
    
    # Configurações de buffer
    nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
    
    # Health check
    nginx.ingress.kubernetes.io/health-check-path: "/actuator/health"
    
    # Certificado SSL (Let's Encrypt)
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - fastfood-api.example.com
    - api.fastfood.example.com
    secretName: fastfood-api-tls
  
  rules:
  # Domínio principal da API
  - host: fastfood-api.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: fastfood-api-service
            port:
              number: 80
  
  # Subdomínio alternativo
  - host: api.fastfood.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: fastfood-api-service
            port:
              number: 80
  
  # Roteamento específico para Swagger
  - host: docs.fastfood.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: fastfood-api-service
            port:
              number: 80
---
# Ingress para ambiente de desenvolvimento
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fastfood-api-ingress-dev
  namespace: fastfood-dev
  labels:
    app: fastfood-api
    environment: development
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
spec:
  rules:
  - host: fastfood-api-dev.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: fastfood-api-service-dev
            port:
              number: 80

